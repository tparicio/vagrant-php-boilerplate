server {
        listen                      80;
	server_name	            www.symfony.local symfony.local;
	root                        /var/www/sites/default/public;
	index                       index.php index.htm index.html default.htm default.html;
	sendfile                    off;
   
    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    location ~* \.(html?|css|js|gif|jpe?g|png|ico|pdf|zip|docx?|pptx?|xlsx?)$ {
		etag                    on;
		gzip                    on;
		gzip_http_version       1.1;
		gzip_min_length         1000;
		gzip_buffers            16 8k;
		gzip_disable            "MSIE [1-6] \.";
		gzip_types              text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
		gzip_vary               on;
		add_header              Pragma public;
		add_header              Cache-Control "public, must-revalidate, proxy-revalidate, max-age=86400";
		proxy_read_timeout      180s;
		proxy_cache_valid       200  1d;
		proxy_cache_use_stale   error timeout invalid_header updating http_500 http_502 http_503 http_504;
		expires                 modified        30d;
	}

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;
}
